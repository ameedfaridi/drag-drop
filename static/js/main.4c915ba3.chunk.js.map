{"version":3,"sources":["component/myDropZone/index.jsx","component/viewFiles/index.js","App.js","index.js"],"names":["MyDropzone","props","React","useState","files","setFiles","onDrop","useCallback","acceptedFiles","reject","mappedAcc","map","file","errors","currentFiles","useDropzone","accept","getRootProps","getInputProps","fileExist","length","className","style","placeSelf","type","disabled","onClick","handleUpload","List","status","index","Typography","name","Cancel","color","textDecoration","display","alignItems","marginLeft","message","CheckCircle","ViewFiles","hanldeMore","App","step","setStep","Stepper","children","currentChild","Children","toArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAMe,SAASA,EAAWC,GAAQ,IAAD,EACdC,IAAMC,SAAS,IADD,mBACjCC,EADiC,KAC1BC,EAD0B,KAGlCC,EAASC,uBAAY,SAACC,EAAeC,GACzC,IAAMC,EAAYF,EAAcG,KAAI,SAACC,GAAD,MAAW,CAAEA,OAAMC,OAAQ,OAC/DR,GAAS,SAACS,GAAD,4BAAsBA,GAAtB,YAAuCJ,GAAvC,YAAqDD,SAC7D,IANqC,EAQAM,YAAY,CAClDT,SACAU,OAAQ,SAFFC,EARgC,EAQhCA,aAAcC,EARkB,EAQlBA,cAIhBC,EAAYf,EAAMgB,OAAS,EAEjC,OACE,sBAAKC,UAAU,OAAf,UACE,gDAASJ,KAAT,IAAyBI,UAAU,UAAnC,UACE,qCAAWH,MACX,mBAAGI,MAAO,CAAEC,UAAW,UAAvB,4BACA,cAAC,EAAD,CAAMnB,MAAOA,QAEf,qBAAKiB,UAAU,MAAf,SACE,wBACEG,KAAK,SACLC,UAAWN,EACXO,QAAS,kBAAMzB,EAAM0B,aAAavB,IAHpC,yBAYD,IAAMwB,EAAO,SAAC,GAA+B,IAA7BxB,EAA4B,EAA5BA,MAA4B,IAArByB,cAAqB,SACjD,OACE,oBAAIR,UAAU,OAAd,SACGjB,EAAMO,KAAI,SAACC,EAAMkB,GAAP,OACTlB,EAAKC,OAAOO,OACV,eAACW,EAAA,EAAD,CAAwBV,UAAU,WAAlC,UACGT,EAAKA,KAAKoB,KACVH,GAAU,cAACI,EAAA,EAAD,CAAQC,MAAM,WACvBL,GACA,sBACEP,MAAO,CACLa,eAAgB,YAChBD,MAAO,MACPE,QAAS,OACTC,WAAY,SACZC,WAAY,UANhB,SASG1B,EAAKC,OAAO,GAAG0B,YAbLT,GAkBjB,eAACC,EAAA,EAAD,CAAYG,MAAM,UAAsBb,UAAU,WAAlD,UACGT,EAAKA,KAAKoB,KACVH,GAAU,cAACW,EAAA,EAAD,CAAalB,MAAO,CAAEY,MAAO,aAFTJ,SC5C5BW,G,MAdG,SAAC,GAA2B,IAAzBrC,EAAwB,EAAxBA,MAAOsC,EAAiB,EAAjBA,WAC1B,OACE,gCACE,sBAAKrB,UAAU,UAAf,UACE,wDACA,cAAC,EAAD,CAAMjB,MAAOA,EAAOyB,QAAQ,OAE9B,qBAAKR,UAAU,MAAf,SACE,wBAAQK,QAASgB,EAAjB,gCCeOC,MAvBf,WAAgB,IAAD,EACWzC,IAAMC,SAAS,GAD1B,mBACNyC,EADM,KACAC,EADA,OAEa3C,IAAMC,SAAS,IAF5B,mBAENC,EAFM,KAECC,EAFD,KAab,OACE,8BACE,eAAC,EAAD,CAASuC,KAAMA,EAAf,UACE,cAAC5C,EAAD,CAAY2B,aAbG,SAACvB,GACpBC,EAASD,GACTyC,EAAQ,MAYJ,cAAC,EAAD,CAAWzC,MAAOA,EAAOsC,WATV,WACnBG,EAAQ,GACRxC,EAAS,aAePyC,EAAU,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUH,EAAW,EAAXA,KAErBI,EADgB9C,IAAM+C,SAASC,QAAQH,GACVH,GACnC,OAAO,8BAAMI,KC5BfG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4c915ba3.chunk.js","sourcesContent":["import { Typography } from \"@material-ui/core\";\r\nimport { Cancel, CheckCircle } from \"@material-ui/icons\";\r\nimport React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./styles.css\";\r\n\r\nexport default function MyDropzone(props) {\r\n  const [files, setFiles] = React.useState([]);\r\n\r\n  const onDrop = useCallback((acceptedFiles, reject) => {\r\n    const mappedAcc = acceptedFiles.map((file) => ({ file, errors: [] }));\r\n    setFiles((currentFiles) => [...currentFiles, ...mappedAcc, ...reject]);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: \".cvs\",\r\n  });\r\n  const fileExist = files.length > 0;\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div {...getRootProps()} className=\"dropBox\">\r\n        <input {...getInputProps()} />\r\n        <p style={{ placeSelf: \"center\" }}>Drag 'n' drop </p>\r\n        <List files={files} />\r\n      </div>\r\n      <div className=\"btn\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!fileExist}\r\n          onClick={() => props.handleUpload(files)}\r\n        >\r\n          upload\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const List = ({ files, status = false }) => {\r\n  return (\r\n    <ul className=\"list\">\r\n      {files.map((file, index) =>\r\n        file.errors.length ? (\r\n          <Typography key={index} className=\"listItem\">\r\n            {file.file.name}\r\n            {status && <Cancel color=\"error\" />}\r\n            {!status && (\r\n              <span\r\n                style={{\r\n                  textDecoration: \"underline\",\r\n                  color: \"red\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginLeft: \"0.2rem\",\r\n                }}\r\n              >\r\n                {file.errors[0].message}\r\n              </span>\r\n            )}\r\n          </Typography>\r\n        ) : (\r\n          <Typography color=\"primary\" key={index} className=\"listItem\">\r\n            {file.file.name}\r\n            {status && <CheckCircle style={{ color: \"green\" }} />}\r\n          </Typography>\r\n        )\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { List } from \"../myDropZone\";\r\nimport \"../myDropZone/styles.css\";\r\n\r\nconst ViewFiles = ({ files, hanldeMore }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"dropBox\">\r\n        <center>Uploaded Documents</center>\r\n        <List files={files} status={true} />\r\n      </div>\r\n      <div className=\"btn\">\r\n        <button onClick={hanldeMore}>more upload</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewFiles;\r\n","import React from \"react\";\nimport MyDropzone from \"./component/myDropZone\";\nimport \"./app.css\";\nimport ViewFiles from \"./component/viewFiles\";\n\nfunction App() {\n  const [step, setStep] = React.useState(0);\n  const [files, setFiles] = React.useState([]);\n  const handleUpload = (files) => {\n    setFiles(files);\n    setStep(1);\n  };\n\n  const hanldeMore  =  ()  =>  {\n    setStep(0);\n    setFiles([]);\n  };\n  \n  return (\n    <div>\n      <Stepper step={step}>\n        <MyDropzone handleUpload={handleUpload} />\n        <ViewFiles files={files} hanldeMore={hanldeMore}/>\n      </Stepper>\n    </div>\n  );\n}\n\nexport default App;\n\nconst Stepper = ({ children, step }) => {\n  const reactChildren = React.Children.toArray(children);\n  const currentChild = reactChildren[step];\n  return <div>{currentChild}</div>;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// 1. Create a client engine instance\n\n// 2. Provide the engine to the app\n// debug engine needs inlined source maps\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}